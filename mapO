#!/usr/bin/gawk -f

BEGIN{

  # OFS = ""; # ORS = "";

  srand();
  ps = substr(rand(),3);

  # clean old files (older than one minute)
  system("rm -f `find run -type f -cmin +1 -not -name .gitignore -print` >& /dev/null");

  split(ENVIRON["QUERY_STRING"], query, "&");
  for (i in query)
	{
	  split(query[i], tq, "=");
	  f[tq[1]] = decode(tq[2]); 
   }

 header();

 # print "<p>Long: " f["long"] "..." f["long"]+0.001 "; Lat: " f["lat"] "..." f["lat"]+0.001 "</p>";
 print "<map name=\"trees\">" ;

 FS="|";
 while ((getline < "aa-tree.csv") > 0)
   {
	 # if tag is given
	 if ($1 == f["tagQ"])
	   {
		 print $14 " " $13 > "run/" ps ".dat";
		 xsq = substr(($14 - 0.001),1,7); ysq = substr($13,1,6) ;
		 print "<area shape=\"circle\" coords=" int(525 + (( xsq + 0.0005) - -71.115) * 25000) "," int(550 - ((( ysq + 0.0005) - 42.288) * 25000)) ",12\" href=\"map?long=" xsq "&amp;lat=" ysq "&amp;tagQ=" f["tagQ"] "\" />" ;
	   }
	 # or if taxa given
	 else if (($3 == f["famQ"]) || ($4 == f["spQ"]))
	   {
		 ll[ substr(($14 - 0.001),1,7) "|" substr($13,1,6) ]++;
	   }
   }

 if (f["tagQ"]=="")
   {
	 for (i in ll)
	   {
		 # print i;
		 split(i,tmp,"|");
		 print tmp[1] + 0.0005 " " tmp[2] + 0.0005 >> "run/" ps ".dat";
		 # x = -1000 *(tmp[1] + 71) ; y = 1000 *(tmp[2]-42) ;
		 if (f["famQ"] != "") qry = "famQ=" f["famQ"] ;
		 else if (f["spQ"] != "") qry = "spQ=" f["spQ"] ;
		 print "<area shape=\"circle\" coords=" int(525 + ((tmp[1] + 0.0005) - -71.115) * 25000) "," int(550 - (((tmp[2] + 0.0005) - 42.288) * 25000)) ",12\" href=\"map?long=" tmp[1] "&amp;lat=" tmp[2] "&amp;" qry "\" />" ;
	   }
   }

 gpheader() ;
 print "plot \"run/" ps ".dat\" with points pointtype 4 pointsize 4 linewidth 2 lt rgb \"yellow" >> "run/" ps ".plt" ;

 system("gnuplot run/" ps ".plt >& /dev/null");

 cmd = "composite run/" ps ".png thumb.png run/" ps "f.png" ;
 system(cmd);
 system("convert run/" ps "f.png run/" ps ".jpg");
 
 footer();

 exit;

 
 # Make page

}

function gpheader() {
  print "set terminal png transparent size 525,550\nset xrange [-71.136:-71.115]\nset yrange [42.288:42.310]\nset border 0\nunset xtics\nunset ytics\nunset key\nset bmargin 0\nset tmargin 0\nset lmargin 0\nset rmargin 0\nset output \"run/" ps ".png\"\n" > "run/" ps ".plt" ;
}

function header() {
    print "Content-type: text/html\n\n";
    print "<html xmlns=\"http://www.w3.org/1999/xhtml\"> \
         <head><title>Arnold Arboretum Trees</title> \
         <meta name=\"viewport\" content=\"width=600, user-scalable=yes\" /> \
         <meta http-equiv=\"Content-Type\" content=\"text/html; \
           charset=utf-8\" /><link rel=\"stylesheet\" \
           href=\"aa.css\" type=\"text/css\" /> \
           </head><body onload=\"gpsit()\" >" ;
	print "<h1>Search results</h1>";
	print "<p><b>" f["famQ"] f["spQ"] "</b></p>" ;

    # <link href=\"../img/icon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\"/>
	# print "<pre>" ;

}

function footer() {
  # print "</pre>";
  # print "<img src=\"run/" ps  ".jpg\" usemap=\"#trees\" />";
  print "<div id=\"base\"> \
           <img src=\"run/" ps ".jpg\" border=\"0\" alt=\"\" /> \
           <div id=\"mid\"> \
             <canvas id=\"gps\" width=\"525\" height=\"550\"></canvas> \
           </div> \
           <div id=\"top\"> \
             <img src=\"img/blank.png\" width=\"525\" height=\"550\" usemap=\"#trees\" border=\"0\" alt=\"\" /> \
           </div> \
         </div> " ;
  print "<p id=\"current\">Initializing GPS...</p>";
  print "  <script type=\"text/javascript\" src=\"js/gps.js\" ></script> \
           <script type=\"text/javascript\" src=\"js/geo.js\"></script> \
           <script src=\"http://code.google.com/apis/gears/gears_init.js\" type=\"text/javascript\" charset=\"utf-8\"></script>";
  print "</body></html>\n";
}

function error(msg) {
  print msg ;
  print "Exiting. Please return to previous page.";
  print "</pre></body></html>";
  exit;
}

# decode urlencoded string
function decode(text,   hex, i, hextab, decoded, len, c, c1, c2, code) {
	
  split("0 1 2 3 4 5 6 7 8 9 a b c d e f", hex, " ")
  for (i=0; i<16; i++) hextab[hex[i+1]] = i
  
  # urldecode function from Heiner Steven
  # http://www.shelldorado.com/scripts/cmds/urldecode

  # decode %xx to ASCII char 
  decoded = ""
  i = 1
  len = length(text)
  
  while ( i <= len ) {
    c = substr (text, i, 1)
    if ( c == "%" ) {
      if ( i+2 <= len ) {
	c1 = tolower(substr(text, i+1, 1))
	c2 = tolower(substr(text, i+2, 1))
	if ( hextab [c1] != "" || hextab [c2] != "" ) {
	  # print "Read: %" c1 c2;
	  # Allow: 
	  # 20 begins main chars, but dissallow 7F (wrong in orig code!)
	       # tab, newline, formfeed, carriage return
	  if ( ( (c1 >= 2) && ((c1 c2) != "7f") )  \
	       || (c1 == 0 && c2 ~ "[9acd]") )
	  {
	    code = 0 + hextab [c1] * 16 + hextab [c2] + 0
	    # print "Code: " code
	    c = sprintf ("%c", code)
	  } else {
	    # for dissallowed chars
	    c = " "
	  }
	  i = i + 2
	}
      }
    } else if ( c == "+" ) {	# special handling: "+" means " "
      c = " "
    }
    decoded = decoded c
    ++i
  }
  
  # change linebreaks to \n
  gsub(/\r\n/, "\n", decoded);
  
  # remove last linebreak
  sub(/[\n\r]*$/,"",decoded);
  
  return decoded
}

# show colornames
#  white              #ffffff = 255 255 255
#  black              #000000 =   0   0   0
#  gray0              #000000 =   0   0   0
#  grey0              #000000 =   0   0   0
#  gray10             #1a1a1a =  26  26  26
#  grey10             #1a1a1a =  26  26  26
#  gray20             #333333 =  51  51  51
#  grey20             #333333 =  51  51  51
#  gray30             #4d4d4d =  77  77  77
#  grey30             #4d4d4d =  77  77  77
#  gray40             #666666 = 102 102 102
#  grey40             #666666 = 102 102 102
#  gray50             #7f7f7f = 127 127 127
#  grey50             #7f7f7f = 127 127 127
#  gray60             #999999 = 153 153 153
#  grey60             #999999 = 153 153 153
#  gray70             #b3b3b3 = 179 179 179
#  grey70             #b3b3b3 = 179 179 179
#  gray80             #cccccc = 204 204 204
#  grey80             #cccccc = 204 204 204
#  gray90             #e5e5e5 = 229 229 229
#  grey90             #e5e5e5 = 229 229 229
#  gray100            #ffffff = 255 255 255
#  grey100            #ffffff = 255 255 255
#  gray               #bebebe = 190 190 190
#  grey               #bebebe = 190 190 190
#  light-gray         #d3d3d3 = 211 211 211
#  light-grey         #d3d3d3 = 211 211 211
#  dark-gray          #a9a9a9 = 169 169 169
#  dark-grey          #a9a9a9 = 169 169 169
#  red                #ff0000 = 255   0   0
#  light-red          #f03232 = 240  50  50
#  dark-red           #8b0000 = 139   0   0
#  yellow             #ffff00 = 255 255   0
#  light-yellow       #ffffe0 = 255 255 224
#  dark-yellow        #c8c800 = 200 200   0
#  green              #00ff00 =   0 255   0
#  light-green        #90ee90 = 144 238 144
#  dark-green         #006400 =   0 100   0
#  spring-green       #00ff7f =   0 255 127
#  forest-green       #228b22 =  34 139  34
#  sea-green          #2e8b57 =  46 139  87
#  blue               #0000ff =   0   0 255
#  light-blue         #add8e6 = 173 216 230
#  dark-blue          #00008b =   0   0 139
#  midnight-blue      #191970 =  25  25 112
#  navy               #000080 =   0   0 128
#  medium-blue        #0000cd =   0   0 205
#  royalblue          #4169e1 =  65 105 225
#  skyblue            #87ceeb = 135 206 235
#  cyan               #00ffff =   0 255 255
#  light-cyan         #e0ffff = 224 255 255
#  dark-cyan          #008b8b =   0 139 139
#  magenta            #ff00ff = 255   0 255
#  light-magenta      #f055f0 = 240  85 240
#  dark-magenta       #8b008b = 139   0 139
#  turquoise          #40e0d0 =  64 224 208
#  light-turquoise    #afeeee = 175 238 238
#  dark-turquoise     #00ced1 =   0 206 209
#  pink               #ffc0cb = 255 192 203
#  light-pink         #ffb6c1 = 255 182 193
#  dark-pink          #ff1493 = 255  20 147
#  coral              #ff7f50 = 255 127  80
#  light-coral        #f08080 = 240 128 128
#  orange-red         #ff4500 = 255  69   0
#  salmon             #fa8072 = 250 128 114
#  light-salmon       #ffa07a = 255 160 122
#  dark-salmon        #e9967a = 233 150 122
#  aquamarine         #7fffd4 = 127 255 212
#  khaki              #f0e68c = 240 230 140
#  dark-khaki         #bdb76b = 189 183 107
#  goldenrod          #daa520 = 218 165  32
#  light-goldenrod    #eedd82 = 238 221 130
#  dark-goldenrod     #b8860b = 184 134  11
#  gold               #ffd700 = 255 215   0
#  beige              #f5f5dc = 245 245 220
#  brown              #a52a2a = 165  42  42
#  orange             #ffa500 = 255 165   0
#  dark-orange        #ff8c00 = 255 140   0
#  violet             #ee82ee = 238 130 238
#  dark-violet        #9400d3 = 148   0 211
#  plum               #dda0dd = 221 160 221
#  purple             #a020f0 = 160  32 240

